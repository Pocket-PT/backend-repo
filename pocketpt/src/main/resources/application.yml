profiles:
  default: local
spring:
  datasource:
    #    include:
    #      #      - docker
    #      - local
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    database: mysql
    #    defer-datasource-initialization: true
    database-platform: org.hibernate.dialect.MySQL8Dialect
    generate-ddl: true
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        jdbc:
          time_zone: Asia/Seoul
    hibernate:
      ddl-auto: update

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${SPRING_SECURITY_KAKAO_CLIENT_ID}
            client-secret: ${SPRING_SECURITY_KAKAO_CLIENT_SECRET}
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            authorization-grant-type: authorization_code
            scope: profile_nickname, account_email
            client-name: Kakao
            client-authentication-method: client_secret_post
          naver:
            scope: name, email, nickname, mobile
            client-id: ${SPRING_SECURITY_NAVER_CLIENT_ID}
            client-secret: ${SPRING_SECURITY_NAVER_CLIENT_SECRET}
            client-name: Naver
            redirect-uri: http://localhost:8080/login/oauth2/code/naver
            authorization-grant-type: authorization_code
        provider:
          kakao:
            user-name-attribute: id
            user-info-uri: https://kapi.kakao.com/v2/user/me
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
            token-uri: https://nid.naver.com/oauth2.0/token

cloud:
  aws:
    s3:
      bucket: ${AWS_S3_BUCKET_NAME}
      url: ${AWS_S3_BUCKET_URL}
    region: ${AWS_S3_REGION}
    credentials:
      accessKey: ${AWS_S3_ACCESS_KEY}
      secretKey: ${AWS_S3_SECRET_KEY}
    stack:
      auto: 'false'
